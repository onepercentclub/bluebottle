name: Bluebottle CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: self-hosted
    services:
      db:
        image: postgis/postgis:11-2.5
        env:
          POSTGRES_USER: bb
          POSTGRES_PASSWORD: bb
          POSTGRES_DB: test_bluebottle_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.8.23
        env:
          discovery.type: single-node
        options: >-
          --health-cmd "curl http://localhost:9200/_cluster/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
        ports:
          - 9200:9200
      rabbitmq:
        image: rabbitmq
        ports:
          - 5672:5672
      celery:
        image: celery
    strategy:
      matrix:
        python-version: [ 3.8 ]

    steps:
      - uses: actions/checkout@v3
      - name: Update package manager
        run: sudo apt-get update
      #      - name: Install packages
      #        run: sudo apt-get install -y libxmlsec1 libxmlsec1-dev libgdal-dev openjdk-8-jdk-headless
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
          cache: 'pip'
      - name: Test data
        run: |
          psql -h localhost -U bb test_bluebottle_test < testdata.sql
        env:
          PGPASSWORD: bb
      - name: Setup Locale
        run: |
          export LC_ALL="en_US.UTF-8"
          export LC_CTYPE="en_US.UTF-8"
          sudo dpkg-reconfigure locales
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('setup.py') }}-${{ hashFiles('setup.py') }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[test] --trusted-host github.com
      - name: Run Tests
        run: |
          python -m coverage run --parallel-mode --source=bluebottle manage.py test --parallel=8 --keepdb --settings bluebottle.settings.github
