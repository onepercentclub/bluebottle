# Generated by Django 4.2.20 on 2025-06-03 15:00

import bluebottle.files.fields
from django.db import migrations, models
import django.db.models.deletion
import django_better_admin_arrayfield.models.fields
import parler.fields
import parler.models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('files', '0013_alter_document_owner_alter_image_owner_and_more'),
        ('segments', '0032_alter_segment_cover_image_alter_segment_story'),
        ('activities', '0084_alter_activity_organization'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activities.activity')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='ActivityQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_types', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.CharField(choices=[('funding', 'Funding'), ('grantapplication', 'Grant Application'), ('periodactivity', 'Activity during a period'), ('dateactivity', 'Activity on a specific date'), ('deadlineactivity', 'Activity within a deadline'), ('scheduleactivity', 'Scheduled activity'), ('periodicactivity', 'Periodic Activity'), ('registereddateactivity', 'Past date activity'), ('deed', 'Deed'), ('collect', 'Collect activity')], max_length=200), default=('funding', 'grantapplication', 'periodactivity', 'dateactivity', 'deadlineactivity', 'scheduleactivity', 'periodicactivity', 'registereddateactivity', 'deed', 'collect'), size=None)),
                ('required', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TextAnswer',
            fields=[
                ('activityanswer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='activities.activityanswer')),
                ('answer', models.TextField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('activities.activityanswer',),
        ),
        migrations.CreateModel(
            name='TextQuestion',
            fields=[
                ('activityquestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='activities.activityquestion')),
            ],
            options={
                'abstract': False,
            },
            bases=('activities.activityquestion',),
        ),
        migrations.AddField(
            model_name='activityanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activities.activityquestion'),
        ),
        migrations.CreateModel(
            name='SegmentQuestion',
            fields=[
                ('activityquestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='activities.activityquestion')),
                ('segment_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='segments.segmenttype')),
            ],
            options={
                'abstract': False,
            },
            bases=('activities.activityquestion',),
        ),
        migrations.CreateModel(
            name='SegmentAnswer',
            fields=[
                ('activityanswer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='activities.activityanswer')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='segments.segment')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('activities.activityanswer',),
        ),
        migrations.CreateModel(
            name='FileUploadQuestion',
            fields=[
                ('activityquestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='activities.activityquestion')),
                ('answer', bluebottle.files.fields.DocumentField(on_delete=django.db.models.deletion.CASCADE, to='files.document')),
            ],
            options={
                'abstract': False,
            },
            bases=('activities.activityquestion',),
        ),
        migrations.CreateModel(
            name='ActivityQuestionTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('question', models.CharField(max_length=255)),
                ('help_text', models.TextField(blank=True, null=True)),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='activities.activityquestion')),
            ],
            options={
                'verbose_name': 'Question Translation',
                'db_table': 'activities_activityquestion_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
