# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-07-12 07:09
from __future__ import unicode_literals

import adminsortable.fields
from pytz import timezone

import bluebottle.utils.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import fluent_contents.models.managers
import parler.managers
import parler.models
import datetime

from bluebottle.clients import properties
from bluebottle.utils.utils import update_group_permissions
from django.conf import settings


STATS = (
    ('people_involved', {'en': {'title': 'Supporters'}, 'nl': {'title': 'Supporters'}}),
    ('projects_realized', {'en': {'title': 'Projects realised'}, 'nl': {'title': 'Project gerealiseerd'}}),
    ('donated_total', {'en': {'title': 'Crowdfunded'}, 'nl': {'title': 'Gecrowdfund'}}),
    ('tasks_realized', {'en': {'title': 'Tasks'}, 'nl': {'title': 'Taken'}}),
    ('votes_cast', {'en': {'title': 'Votes cast'}, 'nl': {'title': 'Stemmen opgehaald'}})
)


PAGE = {
    'en': {
        'title': 'Let\'s do good together',
        'description': 'Our results for 2016',
        'slug': 'our-results-for-2016'
    },
    'nl': {
        'title': 'Samen maken we het verschil',
        'description': 'Onze resultaten van 2016',
        'slug': 'onze-resultaten-van-2016'
    }
}


def create_default_result_pages(apps, schema_editor):
    languages = [lang[0] for lang in properties.LANGUAGES]

    Placeholder = apps.get_model('fluent_contents', 'Placeholder')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    ResultPage = apps.get_model('cms', 'ResultPage')
    StatsContent = apps.get_model('cms', 'StatsContent')
    Stats = apps.get_model('cms', 'Stats')
    Stat = apps.get_model('cms', 'Stat')
    ProjectsContent = apps.get_model('cms', 'ProjectsContent')
    Project = apps.get_model('projects', 'Project')
    Projects = apps.get_model('cms', 'Projects')
    ProjectImagesContent = apps.get_model('cms', 'ProjectImagesContent')
    ShareResultsContent = apps.get_model('cms', 'ShareResultsContent')
    ProjectsMapContent = apps.get_model('cms', 'ProjectsMapContent')
    SupporterTotalContent = apps.get_model('cms', 'SupporterTotalContent')

    # Create the page
    page = ResultPage.objects.create(
        start_date=datetime.date(2016, 1, 1),
        end_date=datetime.date(2017, 12, 31)
    )
    # And all the translations
    for language_code, attrs in PAGE.items():
        if language_code in languages:
            page.translations.create(
                language_code=language_code,
                **attrs
            )

    # Create the placeholder
    page_type = ContentType.objects.get_for_model(page)
    placeholder = Placeholder(
        parent_id=page.pk, parent_type_id=page_type.pk, slot='content', role='m'
    )
    placeholder.parent = page
    placeholder.save()

    # Create the stats list
    stats = Stats.objects.create()
    for type, translations in STATS:
        stat = Stat.objects.create(type=type, stats=stats)
        for language_code, attrs in translations.items():
            stat.translations.create(language_code=language_code, **attrs)

    # And the projects list
    projects = Projects.objects.create()
    start_time = datetime.datetime(
        *page.start_date.timetuple()[:6], tzinfo=timezone(settings.TIME_ZONE)
    )
    end_time = datetime.datetime(
        *page.end_date.timetuple()[:6], tzinfo=timezone(settings.TIME_ZONE)
    )

    for project in Project.objects.filter(
        status__slug='done-complete',
        campaign_ended__range=(start_time, end_time)
    )[:3]:
        projects.projects.add(project)

    # All the content
    all_content = {
        StatsContent: {
            'en': {
                'stats': stats,
                'sort_order': 1
            },
            'nl': {
                'stats': stats,
                'sort_order': 1
            }
        },
        ProjectsContent: {
            'en': {
                'sort_order': 2,
                'title': "Projects that make us proud",
                'sub_title': "These projects are making a difference",
                'projects': projects
            },
            'nl': {
                'sort_order': 2,
                'title': "Projecten waar we extra trots op zijn",
                'sub_title': "Deze projecten maken het verschil",
                'action_text': 'Start je eigen project',
                'projects': projects
            }
        },
        ProjectImagesContent: {
            'en': {
                'sort_order': 3,
                'description': "Join our community and start doing good by supporting a project.",
            },
            'nl': {
                'sort_order': 3,
                'description': "Doe mee met onze community en draag zelf ook bij aan een project",
                'action_text': "Bekijk de projecten|"
            }
        },
        ShareResultsContent: {
            'en': {
                'sort_order': 4,
                'title': "Inspire your network",
                "sub_title": "Share our results",
                'share_text': "With {people} people, we realised {tasks} tasks",
            },
            'nl': {
                'sort_order': 4,
                'title': "Inspireer je netwerk",
                'sub_title': "Deel de resultaten",
                'share_text': "Met {people} people, {tasks} taken voltooid",
            }
        },
        ProjectsMapContent: {
            'en': {
                'sort_order': 5,
                'title': 'We worked in these locations'
            },
            'nl': {
                'sort_order': 5,
                'title': 'We hebben op al deze locaties gewerkt'
            }
        },
        SupporterTotalContent: {
            'en': {
                'sort_order': 6,
                'title': 'A big thanks to all our supporters',
                'sub_title': 'Together we are changing the world!',
                'co_financer_title': 'Special thanks to our co-funders'
            },
            'nl': {
                'sort_order': 6,
                'title': 'Dank aan alle deelnemers!',
                'sub_title': 'Samen maken we een wereld van verschil',
                'co_financer_title': 'En in het special bedanken we onze co-financiers'
            }
        }
    }

    def create_content_block(cls, content):
        content_type = ContentType.objects.get_for_model(cls)
        for language_code, attrs in content.items():
            if language_code in languages:
                cls.objects.create_for_placeholder(
                    placeholder,
                    language_code=language_code,
                    polymorphic_ctype=content_type,  # This does not get set automatically in migrations
                    **attrs
                )

    # create all the content
    for cls, content in all_content.items():
        create_content_block(cls, content)



def add_group_permissions(apps, schema_editor):
    group_perms = {
        'Staff': {
            'perms': (
                'add_resultpage', 'change_resultpage', 'delete_resultpage',
                'add_stats', 'change_stats', 'delete_stats',
                'add_statscontent', 'change_statscontent', 'delete_statscontent',
                'add_stat', 'change_stat', 'delete_stat',
                'add_quotes', 'change_quotes', 'delete_quotes',
                'add_quote', 'change_quote', 'delete_quote',
                'add_quotescontent', 'change_quotescontent', 'delete_quotescontent',
                'add_projects', 'change_projects', 'delete_projects',
                'add_projectscontent', 'change_projectscontent', 'delete_projectscontent',
                'add_shareresultscontent', 'change_shareresultscontent', 'delete_shareresultscontent',
                'add_projectimagescontent', 'change_projectimagescontent', 'delete_projectimagescontent',
                'add_projectsmapcontent', 'change_projectsmapcontent', 'delete_projectsmapcontent',
                'add_supportertotalcontent', 'change_supportertotalcontent', 'delete_supportertotalcontent',
            )
        }
    }

    update_group_permissions('cms', group_perms, apps)

    group_perms = {
        'Staff': {
            'perms': (
                'add_resultpage', 'change_resultpage', 'delete_resultpage',
            )
        },
        'Anonymous': {
            'perms': ('api_read_resultpage',)
        },
        'Authenticated': {
            'perms': ('api_read_resultpage',)
        }
    }
    update_group_permissions('cms', group_perms, apps)



class Migration(migrations.Migration):

    replaces = [(b'cms', '0001_initial'), (b'cms', '0002_shareresultscontent'), (b'cms', '0002_auto_20161207_0918'), (b'cms', '0003_merge_20161207_1037'), (b'cms', '0004_resultpage_image'), (b'cms', '0005_auto_20161207_1512'), (b'cms', '0006_auto_20161207_1642'), (b'cms', '0007_auto_20161207_1709'), (b'cms', '0005_auto_20161208_1124'), (b'cms', '0006_auto_20161208_1159'), (b'cms', '0008_merge_20161212_1459'), (b'cms', '0004_projectsmapcontent'), (b'cms', '0007_merge_20161212_1501'), (b'cms', '0009_merge_20161213_1047'), (b'cms', '0010_auto_20161214_1429'), (b'cms', '0011_auto_20161214_1531'), (b'cms', '0012_auto_20161214_1618'), (b'cms', '0010_auto_20161214_1524'), (b'cms', '0013_merge_20161214_1637'), (b'cms', '0014_auto_20161216_1424'), (b'cms', '0014_auto_20161216_1359'), (b'cms', '0015_merge_20161219_0946'), (b'cms', '0016_auto_20161228_1420'), (b'cms', '0017_add_api_permissions'), (b'cms', '0018_add_group_permissions'), (b'cms', '0019_auto_20170829_1005'), (b'cms', '0020_add_group_permissions'), (b'cms', '0021_auto_20171005_1646'), (b'cms', '0022_migrate_quotes_1'), (b'cms', '0023_migrate_quotes_2'), (b'cms', '0024_migrate_quotes_3'), (b'cms', '0025_migrate_stats_1'), (b'cms', '0026_migrate_stats_2'), (b'cms', '0027_migrate_stats_3'), (b'cms', '0021_homepage'), (b'cms', '0022_auto_20171006_1155'), (b'cms', '0023_auto_20171006_1208'), (b'cms', '0028_merge_20171006_1622'), (b'cms', '0029_auto_20171010_0931'), (b'cms', '0030_migrate_projects_1'), (b'cms', '0031_migrate_projects_2'), (b'cms', '0032_migrate_projects_3'), (b'cms', '0033_auto_20171017_1353'), (b'cms', '0034_auto_20171017_1549'), (b'cms', '0035_auto_20171017_1611'), (b'cms', '0036_auto_20171017_1622'), (b'cms', '0037_auto_20171017_1645'), (b'cms', '0038_auto_20171017_1645'), (b'cms', '0039_auto_20171017_1708'), (b'cms', '0040_auto_20171018_1413'), (b'cms', '0041_auto_20171018_1437'), (b'cms', '0042_auto_20171018_1437'), (b'cms', '0043_auto_20171018_1442'), (b'cms', '0044_auto_20171018_1457'), (b'cms', '0045_auto_20171018_1505'), (b'cms', '0046_auto_20171018_1637'), (b'cms', '0047_auto_20171018_1709'), (b'cms', '0048_auto_20171024_1554'), (b'cms', '0049_auto_20171024_1601'), (b'cms', '0050_auto_20171024_1623'), (b'cms', '0051_auto_20171024_1631'), (b'cms', '0052_auto_20171027_1419'), (b'cms', '0053_auto_20171030_1645'), (b'cms', '0054_auto_20171031_1428'), (b'cms', '0021_auto_20171017_2015'), (b'cms', '0022_auto_20171019_1725'), (b'cms', '0023_auto_20171019_2042'), (b'cms', '0024_siteplatformsettings'), (b'cms', '0025_auto_20171024_1600'), (b'cms', '0055_merge_20171031_1713'), (b'cms', '0056_auto_20171102_1527'), (b'cms', '0057_auto_20171103_1438'), (b'cms', '0058_auto_20171110_1230'), (b'cms', '0059_auto_20171121_1022'), (b'cms', '0059_auto_20171121_0959'), (b'cms', '0060_merge_20171121_1334'), (b'cms', '0061_auto_20171128_1135'), (b'cms', '0062_auto_20171128_1355'), (b'cms', '0063_auto_20171204_1049'), (b'cms', '0064_auto_20171220_1145'), (b'cms', '0065_auto_20180313_1401')]

    initial = True

    dependencies = [
        ('fluent_contents', '0001_initial'),
        ('tasks', '0036_auto_20171005_1646'),
        ('utils', '0002_maillog'),
        ('projects', '0015_auto_20161207_0900'),
        ('geo', '0004_auto_20160929_0817'),
        ('tasks', '0037_auto_20171010_1554'),
        ('surveys', '0031_question_display_theme'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectImagesContent',
            fields=[
                ('contentitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fluent_contents.ContentItem')),
                ('title', models.CharField(blank=True, max_length=63, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('action_text', models.CharField(blank=True, default='Check out our projects', max_length=100, null=True)),
                ('action_link', models.CharField(blank=True, default=b'/projects', max_length=100, null=True)),
            ],
            options={
                'db_table': 'contentitem_cms_projectimagescontent',
                'verbose_name': 'Project Images',
            },
            bases=('fluent_contents.contentitem',),
            managers=[
                ('objects', fluent_contents.models.managers.ContentItemManager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projects', models.ManyToManyField(to=b'projects.Project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectsContent',
            fields=[
                ('contentitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fluent_contents.ContentItem')),
                ('title', models.CharField(blank=True, max_length=63, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=100, null=True)),
                ('action_text', models.CharField(blank=True, default='Add your own project', max_length=100, null=True)),
                ('projects', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cms.Projects')),
                ('action_link', models.CharField(blank=True, default=b'/start-project', max_length=100, null=True)),
            ],
            options={
                'db_table': 'contentitem_cms_projectscontent',
                'verbose_name': 'Projects',
            },
            bases=('fluent_contents.contentitem',),
            managers=[
                ('objects', fluent_contents.models.managers.ContentItemManager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=63)),
                ('quote', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Quotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='QuotesContent',
            fields=[
                ('contentitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fluent_contents.ContentItem')),
                ('title', models.CharField(blank=True, max_length=63, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=100, null=True)),
                ('quotes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Quotes')),
            ],
            options={
                'db_table': 'contentitem_cms_quotescontent',
                'verbose_name': 'Quotes',
            },
            bases=('fluent_contents.contentitem',),
            managers=[
                ('objects', fluent_contents.models.managers.ContentItemManager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ResultPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('slug', models.SlugField(max_length=200, verbose_name='Slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=b'', verbose_name='Header image')),
            ],
        ),
        migrations.CreateModel(
            name='Stat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[(b'manual', 'Manual input'), (b'people_involved', 'People involved'), (b'projects_realized', 'Projects realised'), (b'tasks_realized', 'Tasks realised'), (b'donated_total', 'Donated total'), (b'projects_online', 'Projects Online'), (b'votes_cast', 'Votes casts')], max_length=40)),
                ('title', models.CharField(max_length=63)),
                ('value', models.CharField(blank=True, help_text="Use this for 'manual' input or the override the calculated value.", max_length=63, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Stats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='StatsContent',
            fields=[
                ('contentitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fluent_contents.ContentItem')),
                ('title', models.CharField(blank=True, max_length=63, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=100, null=True)),
                ('stats', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Stats')),
            ],
            options={
                'db_table': 'contentitem_cms_statscontent',
                'verbose_name': 'Platform Statistics',
            },
            bases=('fluent_contents.contentitem',),
            managers=[
                ('objects', fluent_contents.models.managers.ContentItemManager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='SurveyContent',
            fields=[
                ('contentitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fluent_contents.ContentItem')),
                ('title', models.CharField(blank=True, max_length=63, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=100, null=True)),
                ('survey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='surveys.Survey')),
            ],
            options={
                'db_table': 'contentitem_cms_surveycontent',
                'verbose_name': 'Platform Results',
            },
            bases=('fluent_contents.contentitem',),
            managers=[
                ('objects', fluent_contents.models.managers.ContentItemManager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='stat',
            name='stats',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Stats'),
        ),
        migrations.AddField(
            model_name='quote',
            name='quotes',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Quotes'),
        ),
        migrations.CreateModel(
            name='ShareResultsContent',
            fields=[
                ('contentitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fluent_contents.ContentItem')),
                ('title', models.CharField(blank=True, max_length=63, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=100, null=True)),
                ('share_text', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'contentitem_cms_shareresultscontent',
                'verbose_name': 'Share Results',
            },
            bases=('fluent_contents.contentitem',),
            managers=[
                ('objects', fluent_contents.models.managers.ContentItemManager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ResultPageTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('slug', models.SlugField(max_length=200, verbose_name='Slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='cms.ResultPage')),
            ],
            options={
                'verbose_name': 'result page Translation',
                'default_permissions': (),
                'db_table': 'cms_resultpage_translation',
                'managed': True,
                'db_tablespace': '',
            },
        ),
        migrations.RemoveField(
            model_name='resultpage',
            name='description',
        ),
        migrations.RemoveField(
            model_name='resultpage',
            name='slug',
        ),
        migrations.RemoveField(
            model_name='resultpage',
            name='title',
        ),
        migrations.AlterUniqueTogether(
            name='resultpagetranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.CreateModel(
            name='StatTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=63)),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='cms.Stat')),
            ],
            options={
                'verbose_name': 'stat Translation',
                'default_permissions': (),
                'db_table': 'cms_stat_translation',
                'managed': True,
                'db_tablespace': '',
            },
        ),
        migrations.RemoveField(
            model_name='stat',
            name='title',
        ),
        migrations.AlterUniqueTogether(
            name='stattranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.CreateModel(
            name='QuoteTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=30)),
                ('quote', models.CharField(max_length=60)),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='cms.Quote')),
            ],
            options={
                'verbose_name': 'quote Translation',
                'default_permissions': (),
                'db_table': 'cms_quote_translation',
                'managed': True,
                'db_tablespace': '',
            },
        ),
        migrations.RemoveField(
            model_name='quote',
            name='name',
        ),
        migrations.RemoveField(
            model_name='quote',
            name='quote',
        ),
        migrations.AlterField(
            model_name='resultpagetranslation',
            name='description',
            field=models.CharField(blank=True, max_length=70, null=True, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='resultpagetranslation',
            name='slug',
            field=models.SlugField(max_length=40, verbose_name='Slug'),
        ),
        migrations.AlterField(
            model_name='resultpagetranslation',
            name='title',
            field=models.CharField(max_length=40, verbose_name='Title'),
        ),
        migrations.AlterUniqueTogether(
            name='quotetranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterModelOptions(
            name='stat',
            options={'ordering': ['sequence']},
        ),
        migrations.AddField(
            model_name='stat',
            name='sequence',
            field=models.PositiveIntegerField(db_index=True, default=0, editable=False),
        ),
        migrations.AlterField(
            model_name='shareresultscontent',
            name='share_text',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='stat',
            name='stats',
            field=adminsortable.fields.SortableForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Stats'),
        ),
        migrations.CreateModel(
            name='ProjectsMapContent',
            fields=[
                ('contentitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fluent_contents.ContentItem')),
                ('title', models.CharField(blank=True, max_length=40, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=70, null=True)),
            ],
            options={
                'db_table': 'contentitem_cms_projectsmapcontent',
                'verbose_name': 'Projects Map',
            },
            bases=('fluent_contents.contentitem',),
            managers=[
                ('objects', fluent_contents.models.managers.ContentItemManager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='SupporterTotalContent',
            fields=[
                ('contentitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fluent_contents.ContentItem')),
                ('title', models.CharField(blank=True, max_length=63, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'contentitem_cms_supporterscontent',
                'verbose_name': 'Supporters',
            },
            bases=('fluent_contents.contentitem',),
            managers=[
                ('objects', fluent_contents.models.managers.ContentItemManager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterField(
            model_name='shareresultscontent',
            name='share_text',
            field=models.CharField(default=b'', help_text=b'{amount}, {projects}, {tasks}, {hours}, {votes}, {people} will be replaced by live statistics', max_length=100),
        ),
        migrations.AlterModelTable(
            name='supportertotalcontent',
            table='contentitem_cms_supportertotalcontent',
        ),
        migrations.AlterModelOptions(
            name='supportertotalcontent',
            options={'verbose_name': 'Supporter total'},
        ),
        migrations.AddField(
            model_name='supportertotalcontent',
            name='co_financer_title',
            field=models.CharField(blank=True, max_length=70, null=True),
        ),
        migrations.AlterField(
            model_name='shareresultscontent',
            name='share_text',
            field=models.CharField(default='', help_text=b'{amount}, {projects}, {tasks}, {hours}, {votes}, {people} will be replaced by live statistics', max_length=100),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='stat',
            name='type',
            field=models.CharField(choices=[(b'manual', 'Manual input'), (b'people_involved', 'People involved'), (b'projects_realized', 'Projects realised'), (b'tasks_realized', 'Tasks realised'), (b'donated_total', 'Donated total'), (b'amount_matched', 'Amount matched'), (b'projects_online', 'Projects Online'), (b'votes_cast', 'Votes casts')], max_length=40),
        ),
        migrations.AlterField(
            model_name='projectimagescontent',
            name='action_text',
            field=models.CharField(blank=True, default='Check out our projects', max_length=40, null=True),
        ),
        migrations.AlterField(
            model_name='projectimagescontent',
            name='description',
            field=models.TextField(blank=True, max_length=70, null=True),
        ),
        migrations.AlterField(
            model_name='projectimagescontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=70, null=True),
        ),
        migrations.AlterField(
            model_name='projectimagescontent',
            name='title',
            field=models.CharField(blank=True, max_length=40, null=True),
        ),
        migrations.AlterField(
            model_name='projectscontent',
            name='action_text',
            field=models.CharField(blank=True, default='Add your own project', max_length=40, null=True),
        ),
        migrations.AlterField(
            model_name='projectscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=70, null=True),
        ),
        migrations.AlterField(
            model_name='projectscontent',
            name='title',
            field=models.CharField(blank=True, max_length=40, null=True),
        ),
        migrations.AlterField(
            model_name='quotescontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=70, null=True),
        ),
        migrations.AlterField(
            model_name='quotescontent',
            name='title',
            field=models.CharField(blank=True, max_length=40, null=True),
        ),
        migrations.AlterField(
            model_name='resultpagetranslation',
            name='description',
            field=models.CharField(blank=True, max_length=45, null=True, verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='shareresultscontent',
            name='share_text',
            field=models.CharField(default=b'', help_text=b'{amount}, {projects}, {tasks}, {hours}, {votes}, {people} will be replaced by live statistics', max_length=50),
        ),
        migrations.AlterField(
            model_name='shareresultscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=70, null=True),
        ),
        migrations.AlterField(
            model_name='shareresultscontent',
            name='title',
            field=models.CharField(blank=True, max_length=40, null=True),
        ),
        migrations.AlterField(
            model_name='stat',
            name='type',
            field=models.CharField(choices=[(b'manual', 'Manual input'), (b'people_involved', 'People involved'), (b'projects_realized', 'Projects realised'), (b'tasks_realized', 'Tasks realised'), (b'donated_total', 'Donated total'), (b'amount_matched', 'Amount matched'), (b'projects_online', 'Projects Online'), (b'votes_cast', 'Votes casts')], max_length=25),
        ),
        migrations.AlterField(
            model_name='statscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=70, null=True),
        ),
        migrations.AlterField(
            model_name='statscontent',
            name='title',
            field=models.CharField(blank=True, max_length=40, null=True),
        ),
        migrations.AlterField(
            model_name='supportertotalcontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=70, null=True),
        ),
        migrations.AlterField(
            model_name='supportertotalcontent',
            name='title',
            field=models.CharField(blank=True, max_length=40, null=True),
        ),
        migrations.AlterField(
            model_name='surveycontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=70, null=True),
        ),
        migrations.AlterField(
            model_name='surveycontent',
            name='title',
            field=models.CharField(blank=True, max_length=40, null=True),
        ),
        migrations.RunPython(
            create_default_result_pages
        ),
        migrations.AddField(
            model_name='shareresultscontent',
            name='share_title',
            field=models.CharField(default=b'', max_length=100),
        ),
        migrations.AlterField(
            model_name='projectimagescontent',
            name='action_link',
            field=models.CharField(blank=True, default=b'/projects?status=campaign%2Cvoting ', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='projectscontent',
            name='action_text',
            field=models.CharField(blank=True, default='Start your own project', max_length=40, null=True),
        ),
        migrations.AlterField(
            model_name='shareresultscontent',
            name='share_text',
            field=models.CharField(default=b'', help_text=b'{amount}, {projects}, {tasks}, {hours}, {votes}, {people} will be replaced by live statistics', max_length=100),
        ),
        migrations.AlterField(
            model_name='stat',
            name='type',
            field=models.CharField(choices=[(b'manual', 'Manual input'), (b'people_involved', 'People involved'), (b'projects_realized', 'Projects realised'), (b'tasks_realized', 'Tasks realised'), (b'donated_total', 'Donated total'), (b'amount_matched', 'Amount matched'), (b'projects_online', 'Projects Online'), (b'votes_cast', 'Votes casts'), (b'time_spent', 'Time spent')], max_length=25),
        ),
        migrations.AlterField(
            model_name='stat',
            name='type',
            field=models.CharField(choices=[(b'manual', 'Manual input'), (b'people_involved', 'People involved'), (b'participants', 'Participants'), (b'projects_realized', 'Projects realised'), (b'projects_complete', 'Projects complete'), (b'tasks_realized', 'Tasks realised'), (b'task_members', 'Taskmembers'), (b'donated_total', 'Donated total'), (b'pledged_total', 'Pledged total'), (b'amount_matched', 'Amount matched'), (b'projects_online', 'Projects Online'), (b'votes_cast', 'Votes casts'), (b'time_spent', 'Time spent')], max_length=25),
        ),
        migrations.AlterModelOptions(
            name='resultpage',
            options={'permissions': (('api_read_resultpage', 'Can view result pages through the API'), ('api_add_resultpage', 'Can add result pages through the API'), ('api_change_resultpage', 'Can change result pages through the API'), ('api_delete_resultpage', 'Can delete result pages through the API'))},
        ),
        migrations.RunPython(
            add_group_permissions
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[(b'manual', 'Manual input'), (b'people_involved', 'People involved'), (b'participants', 'Participants'), (b'projects_realized', 'Projects realised'), (b'projects_complete', 'Projects complete'), (b'tasks_realized', 'Tasks realised'), (b'task_members', 'Taskmembers'), (b'donated_total', 'Donated total'), (b'pledged_total', 'Pledged total'), (b'amount_matched', 'Amount matched'), (b'projects_online', 'Projects Online'), (b'votes_cast', 'Votes casts'), (b'time_spent', 'Time spent')], max_length=25)),
                ('value', models.CharField(blank=True, help_text="Use this for 'manual' input or the override the calculated value.", max_length=63, null=True)),
                ('sequence', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
            ],
            options={
                'ordering': ['sequence'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='MetricsContent',
            fields=[
                ('contentitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fluent_contents.ContentItem')),
                ('title', models.CharField(blank=True, max_length=40, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=70, null=True)),
            ],
            options={
                'db_table': 'contentitem_cms_metricscontent',
                'verbose_name': 'Metrics',
            },
            bases=('fluent_contents.contentitem',),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='MetricTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=63)),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='cms.Metric')),
            ],
            options={
                'verbose_name': 'metric Translation',
                'default_permissions': (),
                'db_table': 'cms_metric_translation',
                'managed': True,
                'db_tablespace': '',
            },
        ),
        migrations.CreateModel(
            name='TasksContent',
            fields=[
                ('contentitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fluent_contents.ContentItem')),
                ('title', models.CharField(blank=True, max_length=40, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=70, null=True)),
                ('action_text', models.CharField(blank=True, max_length=40, null=True)),
                ('action_link', models.CharField(blank=True, max_length=100, null=True)),
                ('tasks', models.ManyToManyField(db_table=b'cms_taskscontent_tasks', to=b'tasks.Task')),
            ],
            options={
                'db_table': 'contentitem_cms_taskscontent',
                'verbose_name': 'Tasks',
            },
            bases=('fluent_contents.contentitem',),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='metric',
            name='block',
            field=adminsortable.fields.SortableForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='cms.MetricsContent'),
        ),
        migrations.AlterUniqueTogether(
            name='metrictranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AddField(
            model_name='quote',
            name='block',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='new_quotes', to='cms.QuotesContent'),
        ),
        migrations.AlterField(
            model_name='quote',
            name='quotes',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='old_quotes', to='cms.Quotes'),
        ),
        migrations.AlterField(
            model_name='quotescontent',
            name='quotes',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quote_list', to='cms.Quotes'),
        ),
        migrations.AlterModelManagers(
            name='QuotesContent',
            managers=[
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.RemoveField(
            model_name='quote',
            name='quotes',
        ),
        migrations.RemoveField(
            model_name='quotescontent',
            name='quotes',
        ),
        migrations.AlterField(
            model_name='quote',
            name='block',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotes', to='cms.QuotesContent'),
        ),
        migrations.DeleteModel(
            name='Quotes',
        ),
        migrations.AddField(
            model_name='stat',
            name='block',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='new_stats', to='cms.StatsContent'),
        ),
        migrations.AlterField(
            model_name='statscontent',
            name='stats',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stats_content', to='cms.Stats'),
        ),
        migrations.AlterModelManagers(
            name='StatsContent',
            managers=[
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.RemoveField(
            model_name='stat',
            name='stats',
        ),
        migrations.RemoveField(
            model_name='statscontent',
            name='stats',
        ),
        migrations.AlterField(
            model_name='stat',
            name='block',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='cms.StatsContent'),
        ),
        migrations.DeleteModel(
            name='Stats',
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'permissions': (('api_read_homepage', 'Can view homepages through the API'), ('api_add_homepage', 'Can add homepages through the API'), ('api_change_homepage', 'Can change homepages through the API'), ('api_delete_homepage', 'Can delete homepages through the API')),
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='HomePageTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='cms.HomePage')),
            ],
            options={
                'verbose_name': 'home page Translation',
                'default_permissions': (),
                'db_table': 'cms_homepage_translation',
                'managed': True,
                'db_tablespace': '',
            },
        ),
        migrations.AlterUniqueTogether(
            name='homepagetranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.CreateModel(
            name='CategoriesContent',
            fields=[
                ('contentitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fluent_contents.ContentItem')),
                ('title', models.CharField(blank=True, max_length=40, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=70, null=True)),
                ('categories', models.ManyToManyField(db_table=b'cms_categoriescontent_categories', to=b'categories.Category')),
            ],
            options={
                'db_table': 'contentitem_cms_categoriescontent',
                'verbose_name': 'Categories',
            },
            bases=('fluent_contents.contentitem',),
            managers=[
                ('objects', fluent_contents.models.managers.ContentItemManager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='LocationsContent',
            fields=[
                ('contentitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fluent_contents.ContentItem')),
                ('title', models.CharField(blank=True, max_length=40, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=70, null=True)),
                ('locations', models.ManyToManyField(db_table=b'cms_locationscontent_locations', to=b'geo.Location')),
            ],
            options={
                'db_table': 'contentitem_cms_locationscontent',
                'verbose_name': 'Locations',
            },
            bases=('fluent_contents.contentitem',),
            managers=[
                ('objects', fluent_contents.models.managers.ContentItemManager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Slide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', parler.managers.TranslatableManager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='SlidesContent',
            fields=[
                ('contentitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fluent_contents.ContentItem')),
            ],
            options={
                'db_table': 'contentitem_cms_slidescontent',
                'verbose_name': 'Slides',
            },
            bases=('fluent_contents.contentitem',),
            managers=[
                ('objects', fluent_contents.models.managers.ContentItemManager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='SlideTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('tab_text', models.CharField(help_text='This is shown on tabs beneath the banner.', max_length=100, verbose_name='Tab text')),
                ('title', models.CharField(blank=True, max_length=100, verbose_name='Title')),
                ('body', models.TextField(blank=True, verbose_name='Body text')),
                ('image', bluebottle.utils.fields.ImageField(blank=True, max_length=255, null=True, upload_to=b'banner_slides/', verbose_name='Image')),
                ('background_image', bluebottle.utils.fields.ImageField(blank=True, max_length=255, null=True, upload_to=b'banner_slides/', verbose_name='Background image')),
                ('video_url', models.URLField(blank=True, default=b'', max_length=100, verbose_name='Video url')),
                ('link_text', models.CharField(blank=True, help_text='This is the text on the button inside the banner.', max_length=400, verbose_name='Link text')),
                ('link_url', models.CharField(blank=True, help_text='This is the link for the button inside the banner.', max_length=400, verbose_name='Link url')),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='cms.Slide')),
            ],
            options={
                'verbose_name': 'slide Translation',
                'default_permissions': (),
                'db_table': 'cms_slide_translation',
                'managed': True,
                'db_tablespace': '',
            },
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', bluebottle.utils.fields.ImageField(blank=True, max_length=255, null=True, upload_to=b'step_images/', verbose_name='Image')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StepsContent',
            fields=[
                ('contentitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fluent_contents.ContentItem')),
                ('title', models.CharField(blank=True, max_length=40, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=70, null=True)),
                ('action_text', models.CharField(blank=True, default='Start your own project', max_length=40, null=True)),
                ('action_link', models.CharField(blank=True, default=b'/start-project', max_length=100, null=True)),
            ],
            options={
                'db_table': 'contentitem_cms_stepscontent',
                'verbose_name': 'Steps',
            },
            bases=('fluent_contents.contentitem',),
            managers=[
                ('objects', fluent_contents.models.managers.ContentItemManager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='StepTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('header', models.CharField(max_length=100, verbose_name='Header')),
                ('text', models.CharField(max_length=400, verbose_name='Text')),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='cms.Step')),
            ],
            options={
                'verbose_name': 'step Translation',
                'default_permissions': (),
                'db_table': 'cms_step_translation',
                'managed': True,
                'db_tablespace': '',
            },
        ),
        migrations.RemoveField(
            model_name='metric',
            name='block',
        ),
        migrations.RemoveField(
            model_name='metricscontent',
            name='contentitem_ptr',
        ),
        migrations.AlterUniqueTogether(
            name='metrictranslation',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='metrictranslation',
            name='master',
        ),
        migrations.DeleteModel(
            name='Metric',
        ),
        migrations.DeleteModel(
            name='MetricsContent',
        ),
        migrations.DeleteModel(
            name='MetricTranslation',
        ),
        migrations.AddField(
            model_name='step',
            name='block',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='cms.StepsContent'),
        ),
        migrations.AddField(
            model_name='slide',
            name='block',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slides', to='cms.SlidesContent'),
        ),
        migrations.AlterUniqueTogether(
            name='steptranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='slidetranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AddField(
            model_name='projectscontent',
            name='new_projects',
            field=models.ManyToManyField(db_table=b'cms_projectscontent_projects', to=b'projects.Project'),
        ),
        migrations.AlterModelManagers(
            name='ProjectsContent',
            managers=[
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.RemoveField(
            model_name='projects',
            name='projects',
        ),
        migrations.RemoveField(
            model_name='projectscontent',
            name='projects',
        ),
        migrations.DeleteModel(
            name='Projects',
        ),
        migrations.RenameField(
            model_name='projectscontent',
            old_name='new_projects',
            new_name='projects',
        ),
        migrations.AddField(
            model_name='slidescontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=70, null=True),
        ),
        migrations.AddField(
            model_name='slidescontent',
            name='title',
            field=models.CharField(blank=True, max_length=40, null=True),
        ),
        migrations.AlterUniqueTogether(
            name='slidetranslation',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='slidetranslation',
            name='master',
        ),
        migrations.AddField(
            model_name='slide',
            name='background_image',
            field=bluebottle.utils.fields.ImageField(blank=True, max_length=255, null=True, upload_to=b'banner_slides/', verbose_name='Background image'),
        ),
        migrations.AddField(
            model_name='slide',
            name='image',
            field=bluebottle.utils.fields.ImageField(blank=True, max_length=255, null=True, upload_to=b'banner_slides/', verbose_name='Image'),
        ),
        migrations.AddField(
            model_name='slide',
            name='link_text',
            field=models.CharField(blank=True, help_text='This is the text on the button inside the banner.', max_length=400, verbose_name='Link text'),
        ),
        migrations.AddField(
            model_name='slide',
            name='link_url',
            field=models.CharField(blank=True, help_text='This is the link for the button inside the banner.', max_length=400, verbose_name='Link url'),
        ),
        migrations.AddField(
            model_name='slide',
            name='tab_text',
            field=models.CharField(default='', help_text='This is shown on tabs beneath the banner.', max_length=100, verbose_name='Tab text'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='slide',
            name='video_url',
            field=models.URLField(blank=True, default=b'', max_length=100, verbose_name='Video url'),
        ),
        migrations.DeleteModel(
            name='SlideTranslation',
        ),
        migrations.AlterUniqueTogether(
            name='steptranslation',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='steptranslation',
            name='master',
        ),
        migrations.AddField(
            model_name='step',
            name='header',
            field=models.CharField(default='', max_length=100, verbose_name='Header'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='step',
            name='text',
            field=models.CharField(default='', max_length=400, verbose_name='Text'),
            preserve_default=False,
        ),
        migrations.DeleteModel(
            name='StepTranslation',
        ),
        migrations.AddField(
            model_name='projectscontent',
            name='from_homepage',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='stat',
            name='temp_title',
            field=models.CharField(default='', max_length=63),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name='stattranslation',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='stattranslation',
            name='master',
        ),
        migrations.RenameField(
            model_name='stat',
            old_name='temp_title',
            new_name='title',
        ),
        migrations.DeleteModel(
            name='StatTranslation',
        ),
        migrations.CreateModel(
            name='Logo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', bluebottle.utils.fields.ImageField(blank=True, max_length=255, null=True, upload_to=b'logo_images/', verbose_name='Image')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LogosContent',
            fields=[
                ('contentitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fluent_contents.ContentItem')),
                ('title', models.CharField(blank=True, max_length=40, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=70, null=True)),
                ('action_text', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'contentitem_cms_logoscontent',
                'verbose_name': 'Logos',
            },
            bases=('fluent_contents.contentitem',),
            managers=[
                ('objects', fluent_contents.models.managers.ContentItemManager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='logo',
            name='block',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logos', to='cms.LogosContent'),
        ),
        migrations.AddField(
            model_name='quote',
            name='name_tmp',
            field=models.CharField(default='', max_length=30),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='quote',
            name='quote_tmp',
            field=models.CharField(default='', max_length=60),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name='quotetranslation',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='quotetranslation',
            name='master',
        ),
        migrations.RenameField(
            model_name='quote',
            old_name='name_tmp',
            new_name='name',
        ),
        migrations.RenameField(
            model_name='quote',
            old_name='quote_tmp',
            new_name='quote',
        ),
        migrations.DeleteModel(
            name='QuoteTranslation',
        ),
        migrations.AddField(
            model_name='quote',
            name='image',
            field=bluebottle.utils.fields.ImageField(blank=True, max_length=255, null=True, upload_to=b'quote_images/', verbose_name='Image'),
        ),
        migrations.AlterField(
            model_name='quote',
            name='name',
            field=models.CharField(max_length=60),
        ),
        migrations.AlterField(
            model_name='quote',
            name='quote',
            field=models.CharField(max_length=90),
        ),
        migrations.AddField(
            model_name='logoscontent',
            name='action_link',
            field=models.CharField(blank=True, default=b'/start-project', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='slide',
            name='body',
            field=models.TextField(blank=True, verbose_name='Body text'),
        ),
        migrations.AddField(
            model_name='slide',
            name='title',
            field=models.CharField(blank=True, max_length=100, verbose_name='Title'),
        ),
        migrations.CreateModel(
            name='ContentLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', bluebottle.utils.fields.ImageField(blank=True, max_length=255, null=True, upload_to=b'link_images/', verbose_name='Image')),
                ('action_text', models.CharField(max_length=40)),
                ('action_link', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LinksContent',
            fields=[
                ('contentitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fluent_contents.ContentItem')),
                ('title', models.CharField(blank=True, max_length=40, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'contentitem_cms_linkscontent',
                'verbose_name': 'Links',
            },
            bases=('fluent_contents.contentitem',),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterField(
            model_name='projectscontent',
            name='action_text',
            field=models.CharField(blank=True, default='Start your own project', max_length=80, null=True),
        ),
        migrations.AddField(
            model_name='contentlink',
            name='block',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='cms.LinksContent'),
        ),
        migrations.AlterField(
            model_name='categoriescontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=80, null=True),
        ),
        migrations.AlterField(
            model_name='locationscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=80, null=True),
        ),
        migrations.AlterField(
            model_name='logoscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=80, null=True),
        ),
        migrations.AlterField(
            model_name='projectimagescontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=80, null=True),
        ),
        migrations.AlterField(
            model_name='projectscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=80, null=True),
        ),
        migrations.AlterField(
            model_name='projectsmapcontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=80, null=True),
        ),
        migrations.AlterField(
            model_name='quotescontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=80, null=True),
        ),
        migrations.AlterField(
            model_name='shareresultscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=80, null=True),
        ),
        migrations.AlterField(
            model_name='slidescontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=80, null=True),
        ),
        migrations.AlterField(
            model_name='statscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=80, null=True),
        ),
        migrations.AlterField(
            model_name='stepscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=80, null=True),
        ),
        migrations.AlterField(
            model_name='supportertotalcontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=80, null=True),
        ),
        migrations.AlterField(
            model_name='surveycontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=80, null=True),
        ),
        migrations.AlterField(
            model_name='taskscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=80, null=True),
        ),
        migrations.AlterModelManagers(
            name='categoriescontent',
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='locationscontent',
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='logoscontent',
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='projectimagescontent',
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='projectscontent',
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='projectsmapcontent',
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='quotescontent',
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='shareresultscontent',
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='slide',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='slidescontent',
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='statscontent',
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='stepscontent',
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='supportertotalcontent',
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='surveycontent',
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterField(
            model_name='categoriescontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=180, null=True),
        ),
        migrations.AlterField(
            model_name='locationscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=180, null=True),
        ),
        migrations.AlterField(
            model_name='logoscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=180, null=True),
        ),
        migrations.AlterField(
            model_name='projectimagescontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=180, null=True),
        ),
        migrations.AlterField(
            model_name='projectscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=180, null=True),
        ),
        migrations.AlterField(
            model_name='projectsmapcontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=180, null=True),
        ),
        migrations.AlterField(
            model_name='quotescontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=180, null=True),
        ),
        migrations.AlterField(
            model_name='shareresultscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=180, null=True),
        ),
        migrations.AlterField(
            model_name='slidescontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=180, null=True),
        ),
        migrations.AlterField(
            model_name='statscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=180, null=True),
        ),
        migrations.AlterField(
            model_name='stepscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=180, null=True),
        ),
        migrations.AlterField(
            model_name='supportertotalcontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=180, null=True),
        ),
        migrations.AlterField(
            model_name='surveycontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=180, null=True),
        ),
        migrations.AlterField(
            model_name='taskscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=180, null=True),
        ),
        migrations.AlterField(
            model_name='categoriescontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=400, null=True),
        ),
        migrations.AlterField(
            model_name='locationscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=400, null=True),
        ),
        migrations.AlterField(
            model_name='logoscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=400, null=True),
        ),
        migrations.AlterField(
            model_name='projectimagescontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=400, null=True),
        ),
        migrations.AlterField(
            model_name='projectscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=400, null=True),
        ),
        migrations.AlterField(
            model_name='projectsmapcontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=400, null=True),
        ),
        migrations.AlterField(
            model_name='quotescontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=400, null=True),
        ),
        migrations.AlterField(
            model_name='shareresultscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=400, null=True),
        ),
        migrations.AlterField(
            model_name='slidescontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=400, null=True),
        ),
        migrations.AlterField(
            model_name='statscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=400, null=True),
        ),
        migrations.AlterField(
            model_name='stepscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=400, null=True),
        ),
        migrations.AlterField(
            model_name='supportertotalcontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=400, null=True),
        ),
        migrations.AlterField(
            model_name='surveycontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=400, null=True),
        ),
        migrations.AlterField(
            model_name='taskscontent',
            name='sub_title',
            field=models.CharField(blank=True, max_length=400, null=True),
        ),
        migrations.AlterField(
            model_name='projectscontent',
            name='projects',
            field=models.ManyToManyField(blank=True, db_table=b'cms_projectscontent_projects', to=b'projects.Project'),
        ),
        migrations.AlterField(
            model_name='quote',
            name='quote',
            field=models.TextField(),
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('highlight', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('component', models.CharField(blank=True, choices=[(b'page', 'Page'), (b'project', 'Project'), (b'task', 'Task'), (b'fundraiser', 'Fundraiser'), (b'results', 'Results'), (b'news', 'News')], max_length=50, verbose_name='Component')),
                ('component_id', models.CharField(blank=True, max_length=100, verbose_name='Component ID')),
                ('external_link', models.CharField(blank=True, max_length=2000, verbose_name='External Link')),
                ('link_order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
            ],
            options={
                'ordering': ['link_order'],
            },
        ),
        migrations.CreateModel(
            name='LinkGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[(b'main', 'Main'), (b'about', 'About'), (b'info', 'Info'), (b'discover', 'Discover'), (b'social', 'Social')], default=b'main', max_length=25, unique=True)),
                ('title', models.CharField(blank=True, max_length=50, verbose_name='Title')),
            ],
        ),
        migrations.CreateModel(
            name='LinkPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.CharField(help_text='A dot separated app name and permission codename.', max_length=255)),
                ('present', models.BooleanField(default=True, help_text='Should the permission be present or not to access the link?')),
            ],
        ),
        migrations.CreateModel(
            name='SiteLinks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_copyright', models.BooleanField(default=True)),
                ('language', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='utils.Language')),
            ],
            options={
                'verbose_name_plural': 'Site links',
            },
        ),
        migrations.AddField(
            model_name='linkgroup',
            name='site_links',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='link_groups', to='cms.SiteLinks'),
        ),
        migrations.AddField(
            model_name='link',
            name='link_group',
            field=adminsortable.fields.SortableForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='cms.LinkGroup'),
        ),
        migrations.AddField(
            model_name='link',
            name='link_permissions',
            field=models.ManyToManyField(blank=True, to=b'cms.LinkPermission'),
        ),
        migrations.AlterField(
            model_name='link',
            name='component',
            field=models.CharField(blank=True, choices=[(b'page', 'Page'), (b'project', 'Project'), (b'task', 'Task'), (b'fundraiser', 'Fundraiser'), (b'results', 'Results'), (b'news', 'News')], max_length=50, null=True, verbose_name='Component'),
        ),
        migrations.AlterField(
            model_name='link',
            name='component_id',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Component ID'),
        ),
        migrations.AlterField(
            model_name='link',
            name='external_link',
            field=models.CharField(blank=True, max_length=2000, null=True, verbose_name='External Link'),
        ),
        migrations.AlterField(
            model_name='linkgroup',
            name='name',
            field=models.CharField(choices=[(b'main', 'Main'), (b'about', 'About'), (b'info', 'Info'), (b'discover', 'Discover'), (b'social', 'Social')], default=b'main', max_length=25),
        ),
        migrations.AlterModelOptions(
            name='linkgroup',
            options={'ordering': ['group_order']},
        ),
        migrations.AddField(
            model_name='linkgroup',
            name='group_order',
            field=models.PositiveIntegerField(db_index=True, default=0, editable=False),
        ),
        migrations.CreateModel(
            name='SitePlatformSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update', models.DateTimeField(auto_now=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=100, null=True)),
                ('copyright', models.CharField(blank=True, max_length=100, null=True)),
                ('powered_by_text', models.CharField(blank=True, max_length=100, null=True)),
                ('powered_by_link', models.CharField(blank=True, max_length=100, null=True)),
                ('powered_by_logo', models.ImageField(blank=True, null=True, upload_to=b'site_content/')),
            ],
            options={
                'verbose_name': 'site platform settings',
                'verbose_name_plural': 'site platform settings',
            },
        ),
        migrations.CreateModel(
            name='Greeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='WelcomeContent',
            fields=[
                ('contentitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fluent_contents.ContentItem')),
                ('preamble', models.CharField(max_length=20)),
            ],
            options={
                'abstract': False,
                'db_table': 'contentitem_cms_welcomecontent',
            },
            bases=('fluent_contents.contentitem',),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='greeting',
            name='block',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='greetings', to='cms.WelcomeContent'),
        ),
        migrations.AlterModelOptions(
            name='welcomecontent',
            options={'verbose_name': 'Welcome'},
        ),
        migrations.AddField(
            model_name='logo',
            name='link',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='link',
            name='component',
            field=models.CharField(blank=True, choices=[(b'page', 'Page'), (b'project', 'Project'), (b'task', 'Task'), (b'fundraiser', 'Fundraiser'), (b'results-page', 'Results Page'), (b'news', 'News')], max_length=50, null=True, verbose_name='Component'),
        ),
        migrations.AddField(
            model_name='contentlink',
            name='sequence',
            field=models.PositiveIntegerField(db_index=True, default=0, editable=False),
        ),
        migrations.AddField(
            model_name='logo',
            name='sequence',
            field=models.PositiveIntegerField(db_index=True, default=0, editable=False),
        ),
        migrations.AddField(
            model_name='slide',
            name='sequence',
            field=models.PositiveIntegerField(db_index=True, default=0, editable=False),
        ),
        migrations.AddField(
            model_name='step',
            name='sequence',
            field=models.PositiveIntegerField(db_index=True, default=0, editable=False),
        ),
        migrations.AlterField(
            model_name='link',
            name='component',
            field=models.CharField(blank=True, choices=[(b'page', 'Page'), (b'project', 'Project'), (b'task', 'Task'), (b'fundraiser', 'Fundraiser'), (b'results-page', 'Results Page'), (b'news', 'News')], max_length=50, null=True, verbose_name='Component'),
        ),
        migrations.AlterModelOptions(
            name='contentlink',
            options={'ordering': ['sequence']},
        ),
        migrations.AlterModelOptions(
            name='logo',
            options={'ordering': ['sequence']},
        ),
        migrations.AlterModelOptions(
            name='slide',
            options={'ordering': ['sequence']},
        ),
        migrations.AlterModelOptions(
            name='step',
            options={'ordering': ['sequence']},
        ),
        migrations.AlterField(
            model_name='categoriescontent',
            name='title',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='linkscontent',
            name='title',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='locationscontent',
            name='title',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='logoscontent',
            name='title',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='projectimagescontent',
            name='title',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='projectscontent',
            name='title',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='projectsmapcontent',
            name='title',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='quotescontent',
            name='title',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='shareresultscontent',
            name='title',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='slidescontent',
            name='title',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='statscontent',
            name='title',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='stepscontent',
            name='title',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='supportertotalcontent',
            name='title',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='surveycontent',
            name='title',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='taskscontent',
            name='title',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='step',
            name='text',
            field=models.CharField(blank=True, max_length=400, null=True, verbose_name='Text'),
        ),
        migrations.AlterField(
            model_name='logoscontent',
            name='action_text',
            field=models.CharField(blank=True, max_length=40, null=True),
        ),
        migrations.AddField(
            model_name='siteplatformsettings',
            name='favicon',
            field=models.ImageField(blank=True, null=True, upload_to=b'site_content/'),
        ),
        migrations.AddField(
            model_name='siteplatformsettings',
            name='logo',
            field=models.ImageField(blank=True, null=True, upload_to=b'site_content/'),
        ),
        migrations.AlterField(
            model_name='stat',
            name='type',
            field=models.CharField(choices=[(b'manual', 'Manual input'), (b'people_involved', 'People involved'), (b'participants', 'Participants'), (b'projects_realized', 'Projects realised'), (b'projects_complete', 'Projects complete'), (b'tasks_realized', 'Tasks realised'), (b'task_members', 'Taskmembers'), (b'donated_total', 'Donated total'), (b'pledged_total', 'Pledged total'), (b'amount_matched', 'Amount matched'), (b'projects_online', 'Projects Online'), (b'votes_cast', 'Votes casts'), (b'time_spent', 'Time spent'), (b'members', 'Number of members')], max_length=25),
        ),
    ]
