# Generated by Django 2.2.24 on 2023-01-10 08:33
import os

import cssutils

from bluebottle.clients.utils import LocalTenant

from bluebottle.clients.models import Client
from django.db import migrations, connection
import re


def migrate_tenant_colors(apps, schema_editor):
    tenant = Client.objects.get(schema_name=connection.tenant.schema_name)
    tenant_dir = tenant.schema_name.replace('_', '-')
    with LocalTenant(tenant):
        SitePlatformSettings = apps.get_model('cms', 'SitePlatformSettings')
        settings, _ = SitePlatformSettings.objects.get_or_create()
        base_path = os.path.abspath(os.path.join(
            os.path.dirname(__file__), os.path.pardir, os.path.pardir, os.path.pardir, os.path.pardir)
        )
        if os.path.isdir(os.path.join(base_path, 'reef')):
            reef_path = os.path.join(base_path, 'reef')
        if os.path.isdir(os.path.join(base_path, 'frontend')):
            reef_path = os.path.join(base_path, 'frontend')

        print(reef_path)
        style_file = os.path.join(
            reef_path, 'frontend', 'app', 'styles', 'tenants', tenant_dir, '_variables-overwrite.scss'
        )
        mapping = (
            ('$color-client-action', 'action_color'),
            ('$button-color', 'action_text_color'),
            ('$color-client-descriptive', 'description_color'),
            ('$footer-main-bg-color', 'footer_color'),
            ('$footer-main-link-color', 'footer_text_color'),
            ('$color-client-action-alt', 'alternative_link_color'),
        )

        if os.path.isfile(style_file):
            for k, v in mapping:
                reg = "\\" + k + ":\\w*(.*);"
                pattern = re.compile(reg)
                for line in open(style_file):
                    match = re.match(pattern, line)
                    if match:
                        value = match.groups()[0]
                        if '$color-client-descriptive' in value:
                            value = settings.description_color
                        if '$color-client-action' in value:
                            value = settings.action_color
                        if 'white' in value:
                            value = '#ffffff'
                        if '$color-grey-custom' in value:
                            value = '#4a4a4a'
                        if '#' not in value:
                            print('ERROR {} {} {} {}'.format(tenant.schema_name, k, v, value))
                        else:
                            setattr(settings, v, value)
            settings.save()

class Migration(migrations.Migration):

    dependencies = [
        ('cms', '0076_siteplatformsettings_body_font'),
    ]

    operations = [
        migrations.RunPython(
            migrate_tenant_colors,
            migrations.RunPython.noop
        )
    ]
