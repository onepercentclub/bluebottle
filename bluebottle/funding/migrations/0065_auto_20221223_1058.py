# Generated by Django 2.2.24 on 2022-12-23 09:58
from bluebottle.clients.utils import LocalTenant

from bluebottle.clients.models import Client

from bluebottle.utils.exchange_rates import convert
from django.db.models import Sum

from bluebottle.clients import properties
from django.db import migrations, connection
from djmoney.money import Money


def calculate_total(queryset, target='EUR'):
    totals = queryset.values(
        'payout_amount_currency'
    ).annotate(
        total=Sum('payout_amount')
    ).order_by('-created')
    amounts = [Money(tot['total'], tot['payout_amount_currency']) for tot in totals]
    amounts = [convert(amount, target) for amount in amounts]
    return sum(amounts) or Money(0, target)


def update_funding_totals(apps, schema_editor):
    Funding = apps.get_model('funding', 'Funding')
    Donor = apps.get_model('funding', 'Donor')
    tenant = Client.objects.get(schema_name=connection.tenant.schema_name)
    with LocalTenant(tenant):
        for funding in Funding.objects.all():

            donations = Donor.objects.filter(
                activity_id=funding.id,
                status__in=(
                    'succeeded',
                    'activity_refunded',
                )
            )
            currency = funding.target.currency if funding.target else properties.DEFAULT_CURRENCY

            funding.amount_donated = calculate_total(donations, currency)
            funding.amount_pledged = calculate_total(
                donations.filter(
                    payment__pledgepayment__isnull=False
                ),
                currency
            )
            funding.save()


class Migration(migrations.Migration):

    dependencies = [
        ('funding', '0064_auto_20221214_1026'),
    ]

    operations = [
        migrations.RunPython(
            update_funding_totals,
            migrations.RunPython.noop
        )
    ]
