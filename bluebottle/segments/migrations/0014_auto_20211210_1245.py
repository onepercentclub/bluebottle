# Generated by Django 2.2.24 on 2021-12-10 11:46

from django.db import migrations
from django.db.models import Count
from django.db.models.functions import Lower


def fix_duplicate_segments(apps, schema_editor):
    Segment = apps.get_model('segments', 'Segment')
    Member = apps.get_model('members', 'Member')
    duplicates = Segment.objects.values('slug')\
       .annotate(cnt=Count('id'))\
       .order_by()\
       .filter(cnt__gt=1)
    for duplicate in duplicates:
        segments = list(Segment.objects.filter(slug=duplicate['slug']).values_list('id', flat=True))
        for member in Member.objects.filter(segments__id__in=segments).all():
            for s in segments:
                member.segments.remove(s)
            member.segments.add(segments[0])
        segments.pop()
        Segment.objects.filter(id__in=segments).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('segments', '0013_auto_20211210_1244'),
    ]

    operations = [
        migrations.RunPython(
            fix_duplicate_segments,
            migrations.RunPython.noop
        ),
    ]
