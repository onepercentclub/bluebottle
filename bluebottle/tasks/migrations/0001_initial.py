# Generated by Django 1.9.4 on 2016-05-23 13:25

import bluebottle.utils.utils
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('projects', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='english name')),
                ('name_nl', models.CharField(max_length=100, unique=True, verbose_name='dutch name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='location')),
                ('people_needed', models.PositiveIntegerField(default=1, verbose_name='people needed')),
                ('status', models.CharField(choices=[(b'open', 'Open'), (b'in progress', 'In progress'), (b'closed', 'Closed'), (b'realized', 'Realised')], default=b'open', max_length=20, verbose_name='status')),
                ('date_status_change', models.DateTimeField(blank=True, null=True, verbose_name='date status change')),
                ('deadline', models.DateTimeField()),
                ('time_needed', models.FloatField(help_text='Estimated number of hours needed to perform this task.', verbose_name='time_needed')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, help_text='When this task was created?', verbose_name='created')),
                ('updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='updated')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks_task_related', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
                ('skill', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tasks.Skill', verbose_name='Skill needed')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='tags')),
            ],
            options={
                'ordering': ['-created'],
                'abstract': False,
                'verbose_name': 'task',
                'verbose_name_plural': 'tasks',
            },
            bases=(models.Model, ),
        ),
        migrations.CreateModel(
            name='TaskFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to=b'task_files/', verbose_name='file')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='Updated')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks_taskfile_related', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='tasks.Task')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaskMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[(b'applied', 'Applied'), (b'accepted', 'Accepted'), (b'rejected', 'Rejected'), (b'stopped', 'Stopped'), (b'realized', 'Realised')], default=b'applied', max_length=20, verbose_name='status')),
                ('motivation', models.TextField(blank=True, help_text='Motivation by applicant.', verbose_name='Motivation')),
                ('comment', models.TextField(blank=True, help_text='Comment by task owner.', verbose_name='Comment')),
                ('time_spent', models.PositiveSmallIntegerField(default=0, help_text='Time spent executing this task.', verbose_name='time spent')),
                ('externals', models.PositiveSmallIntegerField(default=0, help_text='External people helping for this task', verbose_name='Externals')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='updated')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks_taskmember_related', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='tasks.Task')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
