# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2020-12-23 11:40
from __future__ import unicode_literals

import bluebottle.fsm.triggers
import bluebottle.utils.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('geo', '0018_auto_20201223_1240'),
        ('time_based', '0043_auto_20201217_0743'),
    ]

    operations = [
        migrations.CreateModel(
            name='DateActivitySlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(max_length=40)),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='title')),
                ('capacity', models.PositiveIntegerField(blank=True, null=True, verbose_name='attendee limit')),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='start date and time')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='duration')),
                ('is_online', models.NullBooleanField(choices=[(None, 'Not set yet'), (True, 'Yes, participants can join from anywhere or online'), (False, 'No, enter a location')], default=None, verbose_name='is online')),
                ('online_meeting_url', models.TextField(blank=True, default='', verbose_name='online meeting link')),
                ('location_hint', models.TextField(blank=True, null=True, verbose_name='location hint')),
            ],
            options={
                'abstract': False,
            },
            bases=(bluebottle.fsm.triggers.TriggerMixin, bluebottle.utils.models.AnonymizationMixin, bluebottle.utils.models.ValidatedModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PeriodActivitySlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(max_length=40)),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='title')),
                ('capacity', models.PositiveIntegerField(blank=True, null=True, verbose_name='attendee limit')),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='start date and time')),
                ('end', models.DateTimeField(blank=True, null=True, verbose_name='end date and time')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='time_based.PeriodActivity')),
            ],
            options={
                'abstract': False,
            },
            bases=(bluebottle.fsm.triggers.TriggerMixin, bluebottle.utils.models.AnonymizationMixin, bluebottle.utils.models.ValidatedModelMixin, models.Model),
        ),
        migrations.AlterField(
            model_name='dateactivity',
            name='online_meeting_url',
            field=models.TextField(blank=True, default='', verbose_name='online meeting link'),
        ),
        migrations.AlterField(
            model_name='dateactivity',
            name='start',
            field=models.DateTimeField(blank=True, null=True, verbose_name='start date and time'),
        ),
        migrations.AddField(
            model_name='dateactivityslot',
            name='activity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='time_based.DateActivity'),
        ),
        migrations.AddField(
            model_name='dateactivityslot',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geo.Geolocation', verbose_name='location'),
        ),
    ]
