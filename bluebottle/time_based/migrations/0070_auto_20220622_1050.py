# Generated by Django 2.2.24 on 2022-06-22 08:50

import bluebottle.fsm.triggers
import bluebottle.utils.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('activities', '0058_auto_20220622_1050'),
        ('geo', '0030_merge_20211026_1137'),
        ('time_based', '0069_auto_20220622_0930'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='periodactivityslot',
            options={'permissions': (('api_read_periodactivityslot', 'Can view over a period activity slots through the API'), ('api_add_periodactivityslot', 'Can add over a period activity slots through the API'), ('api_change_periodactivityslot', 'Can change over a period activity slots through the API'), ('api_delete_periodactivityslot', 'Can delete over a period activity slots through the API'), ('api_read_own_periodactivityslot', 'Can view own over a period activity slots through the API'), ('api_add_own_periodactivityslot', 'Can add own over a period activity slots through the API'), ('api_change_own_periodactivityslot', 'Can change own over a period activity slots through the API'), ('api_delete_own_periodactivityslot', 'Can delete own over a period activity slots through the API')), 'verbose_name': 'period activity slot', 'verbose_name_plural': 'period activity slots'},
        ),
        migrations.CreateModel(
            name='TeamSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(max_length=40)),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='title')),
                ('capacity', models.PositiveIntegerField(blank=True, null=True, verbose_name='attendee limit')),
                ('is_online', models.NullBooleanField(choices=[(None, 'Not set yet'), (True, 'Yes, anywhere/online'), (False, 'No, enter a location')], default=None, verbose_name='is online')),
                ('online_meeting_url', models.TextField(blank=True, default='', verbose_name='online meeting link')),
                ('location_hint', models.TextField(blank=True, null=True, verbose_name='location hint')),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='start date and time')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_slots', to='time_based.PeriodActivity')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geo.Geolocation', verbose_name='location')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slot', to='activities.Team')),
            ],
            options={
                'verbose_name': 'team slot',
                'verbose_name_plural': 'team slots',
                'permissions': (('api_read_teamslot', 'Can view over a team slots through the API'), ('api_add_teamslot', 'Can add over a team slots through the API'), ('api_change_teamslot', 'Can change over a team slots through the API'), ('api_delete_teamslot', 'Can delete over a team slots through the API'), ('api_read_own_teamslot', 'Can view own over a team slots through the API'), ('api_add_own_teamslot', 'Can add own over a team slots through the API'), ('api_change_own_teamslot', 'Can change own over a team slots through the API'), ('api_delete_own_teamslot', 'Can delete own over a team slots through the API')),
            },
            bases=(bluebottle.fsm.triggers.TriggerMixin, bluebottle.utils.models.AnonymizationMixin, bluebottle.utils.models.ValidatedModelMixin, models.Model),
        ),
    ]
