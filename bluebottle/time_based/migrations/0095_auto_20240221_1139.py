# Generated by Django 3.2.20 on 2024-02-21 10:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('geo', '0033_auto_20231211_1541'),
        ('activities', '0072_auto_20240207_1140'),
        ('time_based', '0094_merge_20240208_1501'),
    ]

    operations = [
        migrations.CreateModel(
            name='PeriodicActivity',
            fields=[
                ('timebasedactivity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='time_based.timebasedactivity')),
                ('is_online', models.BooleanField(choices=[(None, 'Not set yet'), (True, 'Yes, participants can join from anywhere or online'), (False, 'No, enter a location')], default=None, null=True, verbose_name='is online')),
                ('location_hint', models.TextField(blank=True, null=True, verbose_name='location hint')),
                ('start', models.DateField(blank=True, help_text='The first moment participants can start.', null=True, verbose_name='Start date')),
                ('deadline', models.DateField(blank=True, help_text='Participants can contribute until this date.', null=True, verbose_name='End date')),
                ('duration', models.DurationField(blank=True, help_text='How much time will a participant contribute?', null=True, verbose_name='Activity duration')),
                ('online_meeting_url', models.TextField(blank=True, default='', verbose_name='Online Meeting URL')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geo.geolocation', verbose_name='location')),
            ],
            options={
                'verbose_name': 'Periodic activity',
                'verbose_name_plural': 'Periodic activities',
                'permissions': (('api_read_periodicactivity', 'Can view on a periodic activities through the API'), ('api_add_periodicactivity', 'Can add on a periodic activities through the API'), ('api_change_periodicactivity', 'Can change on a periodic activities through the API'), ('api_delete_periodicactivity', 'Can delete on a periodic activities through the API'), ('api_read_own_periodicactivity', 'Can view own on a periodic activities through the API'), ('api_add_own_periodicactivity', 'Can add own on a periodic activities through the API'), ('api_change_own_periodicactivity', 'Can change own on a periodic activities through the API'), ('api_delete_own_periodicactivity', 'Can delete own on a periodic activities through the API')),
            },
            bases=('time_based.timebasedactivity',),
        ),
        migrations.CreateModel(
            name='PeriodicRegistration',
            fields=[
                ('registration_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='time_based.registration')),
            ],
            options={
                'verbose_name': 'Periodic registration',
                'verbose_name_plural': 'Periodic registrations',
                'permissions': (('api_read_periodicregistration', 'Can view periodic registation through the API'), ('api_add_periodicregistration', 'Can add periodic registation through the API'), ('api_change_periodicregistration', 'Can change periodic registation through the API'), ('api_delete_periodicregistration', 'Can delete periodic registation through the API'), ('api_read_own_periodicregistration', 'Can view own periodic registation through the API'), ('api_add_own_periodicregistration', 'Can add own periodic registation through the API'), ('api_change_own_periodicregistration', 'Can change own periodic registation through the API'), ('api_delete_own_periodicregistration', 'Can delete own periodic registation through the API')),
            },
            bases=('time_based.registration',),
        ),
        migrations.AlterModelOptions(
            name='deadlineactivity',
            options={'permissions': (('api_read_deadlineactivity', 'Can view on a deadline activities through the API'), ('api_add_deadlineactivity', 'Can add on a deadline activities through the API'), ('api_change_deadlineactivity', 'Can change on a deadline activities through the API'), ('api_delete_deadlineactivity', 'Can delete on a deadline activities through the API'), ('api_read_own_deadlineactivity', 'Can view own on a deadline activities through the API'), ('api_add_own_deadlineactivity', 'Can add own on a deadline activities through the API'), ('api_change_own_deadlineactivity', 'Can change own on a deadline activities through the API'), ('api_delete_own_deadlineactivity', 'Can delete own on a deadline activities through the API')), 'verbose_name': 'Deadline activity', 'verbose_name_plural': 'Deadline activities'},
        ),
        migrations.CreateModel(
            name='PeriodicSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=40)),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='start date and time')),
                ('end', models.DateTimeField(blank=True, null=True, verbose_name='end date and time')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='duration')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='time_based.periodicactivity')),
            ],
        ),
        migrations.CreateModel(
            name='PeriodicParticipant',
            fields=[
                ('contributor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='activities.contributor')),
                ('registration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='time_based.registration')),
                ('slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='time_based.periodicslot')),
            ],
            options={
                'verbose_name': 'Periodic participant',
                'verbose_name_plural': 'Periodic participants',
                'permissions': (('api_read_periodicparticipant', 'Can view periodic participant through the API'), ('api_add_periodicparticipant', 'Can add periodic participant through the API'), ('api_change_periodicparticipant', 'Can change periodic participant through the API'), ('api_delete_periodicparticipant', 'Can delete periodic participant through the API'), ('api_read_own_periodicparticipant', 'Can view own periodic participant through the API'), ('api_add_own_periodicparticipant', 'Can add own periodic participant through the API'), ('api_change_own_periodicparticipant', 'Can change own periodic participant through the API'), ('api_delete_own_periodicparticipant', 'Can delete own periodic participant through the API')),
            },
            bases=('activities.contributor',),
        ),
    ]
