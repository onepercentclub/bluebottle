# Generated by Django 3.2.20 on 2024-04-19 14:32

import bluebottle.fsm.triggers
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('activities', '0072_auto_20240207_1140'),
        ('geo', '0033_auto_20231211_1541'),
        ('time_based', '0112_auto_20240416_1037'),
    ]

    operations = [
        migrations.CreateModel(
            name='TeamRegistration',
            fields=[
                ('registration_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='time_based.registration')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('time_based.registration',),
        ),
        migrations.CreateModel(
            name='TeamScheduleRegistration',
            fields=[
                ('teamregistration_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='time_based.teamregistration')),
            ],
            options={
                'verbose_name': 'Team for schedule activities',
                'verbose_name_plural': 'Teams for schedule activities',
                'permissions': (('api_read_teamscheduleregistration', 'Can view candidates through the API'), ('api_add_teamscheduleregistration', 'Can add candidates through the API'), ('api_change_teamscheduleregistration', 'Can change candidates through the API'), ('api_delete_teamscheduleregistration', 'Can delete candidates through the API'), ('api_read_own_teamscheduleregistration', 'Can view own candidates through the API'), ('api_add_own_teamscheduleregistration', 'Can add own candidates through the API'), ('api_change_own_teamscheduleregistration', 'Can change own candidates through the API'), ('api_delete_own_teamscheduleregistration', 'Can delete own candidates through the API')),
            },
            bases=('time_based.teamregistration',),
        ),
        migrations.CreateModel(
            name='TeamScheduleSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=40)),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='start date and time')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='duration')),
                ('is_online', models.BooleanField(choices=[(None, 'Not set yet'), (True, 'Yes, anywhere/online'), (False, 'No, enter a location')], default=None, null=True, verbose_name='is online')),
                ('online_meeting_url', models.TextField(blank=True, default='', verbose_name='online meeting link')),
                ('location_hint', models.TextField(blank=True, null=True, verbose_name='location hint')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_slots', to='time_based.scheduleactivity')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geo.geolocation', verbose_name='location')),
            ],
            options={
                'abstract': False,
            },
            bases=(bluebottle.fsm.triggers.TriggerMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TeamScheduleParticipant',
            fields=[
                ('contributor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='activities.contributor')),
                ('registration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='time_based.registration')),
                ('slot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_participants', to='time_based.teamscheduleslot')),
            ],
            options={
                'verbose_name': 'Participant to schedule activities',
                'verbose_name_plural': 'Participants to schedule activities',
                'permissions': (('api_read_scheduleparticipant', 'Can view participant through the API'), ('api_add_scheduleparticipant', 'Can add participant through the API'), ('api_change_scheduleparticipant', 'Can change participant through the API'), ('api_delete_scheduleparticipant', 'Can delete participant through the API'), ('api_read_own_scheduleparticipant', 'Can view own participant through the API'), ('api_add_own_scheduleparticipant', 'Can add own participant through the API'), ('api_change_own_scheduleparticipant', 'Can change own participant through the API'), ('api_delete_own_scheduleparticipant', 'Can delete own participant through the API')),
            },
            bases=('activities.contributor',),
        ),
    ]
