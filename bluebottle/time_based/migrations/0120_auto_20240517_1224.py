# Generated by Django 3.2.20 on 2024-05-17 10:24

import bluebottle.fsm.triggers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('time_based', '0119_teamscheduleregistration_invite_code'),
    ]

    operations = [
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invite_code', models.UUIDField(default=uuid.uuid4)),
                ('status', models.CharField(max_length=40)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='time_based.timebasedactivity')),
                ('registration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='team', to='time_based.registration')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_captains', to=settings.AUTH_USER_MODEL)),
            ],
            bases=(bluebottle.fsm.triggers.TriggerMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=40)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='time_based.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to=settings.AUTH_USER_MODEL)),
            ],
            bases=(bluebottle.fsm.triggers.TriggerMixin, models.Model),
        ),
        migrations.AlterModelOptions(
            name='teamscheduleparticipant',
            options={'permissions': (('api_read_teamscheduleparticipant', 'Can view team member participant through the API'), ('api_add_teamscheduleparticipant', 'Can add team member participant through the API'), ('api_change_teamscheduleparticipant', 'Can change team member participant through the API'), ('api_delete_teamscheduleparticipant', 'Can delete team member participant through the API'), ('api_read_own_teamscheduleparticipant', 'Can view own team member participant through the API'), ('api_add_own_teamscheduleparticipant', 'Can add own team member participant through the API'), ('api_change_own_teamscheduleparticipant', 'Can change own team member participant through the API'), ('api_delete_own_scheduleparticipant', 'Can delete own participant through the API')), 'verbose_name': 'Team member participation', 'verbose_name_plural': 'Team member participations'},
        ),
        migrations.RemoveField(
            model_name='teamscheduleregistration',
            name='invite_code',
        ),
        migrations.AlterField(
            model_name='teamscheduleparticipant',
            name='registration',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='time_based.registration'),
        ),
        migrations.DeleteModel(
            name='ScheduleTeamMember',
        ),
        migrations.AddField(
            model_name='teamscheduleparticipant',
            name='team_member',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='time_based.teammember'),
        ),
        migrations.AddField(
            model_name='teamscheduleslot',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='time_based.team'),
        ),
    ]
