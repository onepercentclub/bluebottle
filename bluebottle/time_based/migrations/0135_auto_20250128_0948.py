# Generated by Django 3.2.20 on 2025-01-28 08:48

import bluebottle.files.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('files', '0012_auto_20250113_1704'),
        ('geo', '0035_set_alternate_names'),
        ('time_based', '0134_auto_20250107_0920'),
    ]

    operations = [
        migrations.CreateModel(
            name='DateRegistration',
            fields=[
                ('registration_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='time_based.registration')),
            ],
            options={
                'verbose_name': 'Candidate for date activities',
                'verbose_name_plural': 'Candidates for date activities',
                'permissions': (('api_read_dateregistration', 'Can view registration through the API'), ('api_add_dateregistration', 'Can add registration through the API'), ('api_change_dateregistration', 'Can change candidates through the API'), ('api_delete_dateregistration', 'Can delete candidates through the API'), ('api_read_own_dateregistration', 'Can view own candidates through the API'), ('api_add_own_dateregistration', 'Can add own candidates through the API'), ('api_change_own_dateregistration', 'Can change own candidates through the API'), ('api_delete_own_dateregistration', 'Can delete own candidates through the API')),
            },
            bases=('time_based.registration',),
        ),
        migrations.AlterModelOptions(
            name='dateparticipant',
            options={'permissions': (('api_read_dateparticipant', 'Can view participant through the API'), ('api_add_dateparticipant', 'Can add participant through the API'), ('api_change_dateparticipant', 'Can change participant through the API'), ('api_delete_dateparticipant', 'Can delete participant through the API'), ('api_read_own_dateparticipant', 'Can view own participant through the API'), ('api_add_own_dateparticipant', 'Can add own participant through the API'), ('api_change_own_dateparticipant', 'Can change own participant through the API'), ('api_delete_own_dateparticipant', 'Can delete own participant through the API')), 'verbose_name': 'Participant to date activity slot', 'verbose_name_plural': 'Participants to date activity slot'},
        ),
        migrations.AlterModelOptions(
            name='periodicparticipant',
            options={'permissions': (('api_read_periodicparticipant', 'Can view recurring participant through the API'), ('api_add_periodicparticipant', 'Can add recurring participant through the API'), ('api_change_periodicparticipant', 'Can change recurring participant through the API'), ('api_delete_periodicparticipant', 'Can delete recurring participant through the API'), ('api_read_own_periodicparticipant', 'Can view own recurring participant through the API'), ('api_add_own_periodicparticipant', 'Can add own recurring participant through the API'), ('api_change_own_periodicparticipant', 'Can change own recurring participant through the API'), ('api_delete_own_periodicparticipant', 'Can delete own recurring participant through the API')), 'verbose_name': 'Participant to recurring activities', 'verbose_name_plural': 'Participants to recurring activities'},
        ),
        migrations.AddField(
            model_name='dateparticipant',
            name='slot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='time_based.dateactivityslot'),
        ),
        migrations.AlterField(
            model_name='dateparticipant',
            name='document',
            field=bluebottle.files.fields.PrivateDocumentField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='files.privatedocument'),
        ),
        migrations.AlterField(
            model_name='deadlineactivity',
            name='deadline',
            field=models.DateField(blank=True, help_text='When does the period end?', null=True, verbose_name='End date'),
        ),
        migrations.AlterField(
            model_name='deadlineactivity',
            name='location',
            field=models.ForeignKey(blank=True, help_text='You can enter a specific address, city or wider region.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='geo.geolocation', verbose_name='location'),
        ),
        migrations.AlterField(
            model_name='deadlineactivity',
            name='start',
            field=models.DateField(blank=True, help_text='When does the period start during which participants can take part in your activity?', null=True, verbose_name='Start date'),
        ),
        migrations.AlterField(
            model_name='periodicactivity',
            name='deadline',
            field=models.DateField(blank=True, help_text='When does the period end?', null=True, verbose_name='End date'),
        ),
        migrations.AlterField(
            model_name='periodicactivity',
            name='location',
            field=models.ForeignKey(blank=True, help_text='You can enter a specific address, city or wider region.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='geo.geolocation', verbose_name='location'),
        ),
        migrations.AlterField(
            model_name='periodicactivity',
            name='start',
            field=models.DateField(blank=True, help_text='When does the period start during which participants can take part in your activity?', null=True, verbose_name='Start date'),
        ),
        migrations.AlterField(
            model_name='periodparticipant',
            name='document',
            field=bluebottle.files.fields.PrivateDocumentField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='files.privatedocument'),
        ),
        migrations.AlterField(
            model_name='registration',
            name='document',
            field=bluebottle.files.fields.PrivateDocumentField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='files.privatedocument'),
        ),
        migrations.AlterField(
            model_name='scheduleactivity',
            name='deadline',
            field=models.DateField(blank=True, help_text='End of the period during which participants/teams can take part in your activity.', null=True, verbose_name='End date'),
        ),
        migrations.AlterField(
            model_name='scheduleactivity',
            name='location',
            field=models.ForeignKey(blank=True, help_text='If the activity takes place in multiple locations then add the region. You will be able to add specific locations to individual participants when they are scheduled.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='geo.geolocation', verbose_name='location'),
        ),
        migrations.AlterField(
            model_name='scheduleactivity',
            name='start',
            field=models.DateField(blank=True, help_text='Start of the period during which participants/teams can take part in your activity.', null=True, verbose_name='Start date'),
        ),
        migrations.AddField(
            model_name='slotparticipant',
            name='registration',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slot_participants', to='time_based.dateregistration'),
        ),
        migrations.AlterField(
            model_name='dateparticipant',
            name='registration',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='time_based.dateregistration'),
        ),
    ]
